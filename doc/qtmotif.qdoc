/****************************************************************************
** 
** Copyright (c) 2009 Nokia Corporation and/or its subsidiary(-ies).
** All rights reserved.
** Contact: Nokia Corporation (qt-info@nokia.com)
** 
** This file is part of a Qt Solutions component.
**
** Commercial Usage  
** Licensees holding valid Qt Commercial licenses may use this file in
** accordance with the Qt Solutions Commercial License Agreement provided
** with the Software or, alternatively, in accordance with the terms
** contained in a written agreement between you and Nokia.
** 
** GNU Lesser General Public License Usage
** Alternatively, this file may be used under the terms of the GNU Lesser
** General Public License version 2.1 as published by the Free Software
** Foundation and appearing in the file LICENSE.LGPL included in the
** packaging of this file.  Please review the following information to
** ensure the GNU Lesser General Public License version 2.1 requirements
** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
** 
** In addition, as a special exception, Nokia gives you certain
** additional rights. These rights are described in the Nokia Qt LGPL
** Exception version 1.1, included in the file LGPL_EXCEPTION.txt in this
** package.
** 
** GNU General Public License Usage 
** Alternatively, this file may be used under the terms of the GNU
** General Public License version 3.0 as published by the Free Software
** Foundation and appearing in the file LICENSE.GPL included in the
** packaging of this file.  Please review the following information to
** ensure the GNU General Public License version 3.0 requirements will be
** met: http://www.gnu.org/copyleft/gpl.html.
** 
** Please note Third Party Software included with Qt Solutions may impose
** additional restrictions and it is the user's responsibility to ensure
** that they have met the licensing requirements of the GPL, LGPL, or Qt
** Solutions Commercial license and the relevant license of the Third
** Party Software they are using.
** 
** If you are unsure which license is appropriate for your use, please
** contact Nokia at qt-info@nokia.com.
** 
****************************************************************************/

/*! \page qtmotif-overview.html

\title Qt Motif Extension
\keyword Motif

\section1 Introduction

The Qt Motif extension assists the migration of old Xt and Motif based
applications to the more comfortable Qt toolkit.  This extension
replaces the older Xt/Motif Support Extension included with earlier
versions of Qt.

This extension is typically used by developers when incrementally
migrating Motif-based applications to Qt. To take full advantage of
Qt, we recommend that you ship complete Qt ports of your applications
rather than rely on this extension in production software.

The Qt Motif extension consists of the following classes:

\list
\o \l QtMotif - Provides the basis of the Qt Motif extension.
\o \l QtMotifWidget - Provides the QWidget API for Motif widgets.
\o \l QtMotifDialog - Provides the QDialog API for Motif dialogs.
\o \l QtXtWidget - The Xt/Motif integration widget from the previous
Xt/Motif extension.  This class is unsupported and has many known
problems and limitations.  It is provided only to keep existing source
working; it should not be used in new code.
\endlist

See also the following examples:

\list
\o \l{A Motif Dialog}
\o \l{Using the Motif Event Loop}
\endlist

\section1 Common Problems

\section2 Incorrect CDE Color Scheme

QtMotifWidget and QtMotifDialog will use the same Visual, Colormap, and
color depth that QApplication uses. But when using CDE, the color
scheme may be incorrect if the Visual, Colormap, and color depth are
not the same as the defaults. To work around this problem, add the
following resource string to your startup files (for example,
\c $HOME/.dt/sessions/current/dt.resources):

\code
    *userColorObj: false
\endcode

\section2 X11 Header Conflicts

The X11 headers define some constants that conflict with the Qt
headers.  The solution is to include all Qt headers first, followed by
headers from this extension, and all Xt/Motif and X11 headers last.

For example:

\code
    // Qt headers first
    #include <QApplication>
    #include <QPushButton>
    #include <QTcpSocket>
    ...

    // QtMotif* headers next
    #include <QtMotif>
    #include <QtMotifDialog>
    #include <QtMotifWidget>

    // Xt/Motif and X11 headers last
    #include <X11/Xlib.h>
    #include <Xt/Intrinsic.h>
    #include <Xm/Xm.h>
    ...
\endcode

\section2 Multiple Screen Support

QtMotifWidget can be used together with QDesktopWidget to create
top-level windows on multiple screens.  A common mistake is to create
a QtMotifWidget on a non-default screen while the Xt/Motif widgets are
created on the default screen.  The solution is to specify the screen
to both QtMotifWidget and the Xt/Motif child.  For example:

\code
    Display *dpy = QX11Info::display();
    Arg args[1];

    // make sure both QtMotifWidget and the XmMainWindow are on screen 1
    XtSetArg(args[0], XtNscreen, ScreenOfDisplay(dpy, 1));
    QtMotifWidget *toplevel =
        new QtMotifWidget(QApplication::desktop()->screen(1),
                         xmMainWindowWidgetClass, args, 1, "mainwindow");
\endcode

*/
